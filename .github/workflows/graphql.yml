name: Check and Update GraphQL Schema
on:
  push:
    paths:
      - 'backend/**'
  pull_request:
    paths:
      - 'backend/**'

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install NodeJS dependencies
        run: |
          cd backend
          pnpm install

      - name: Install Rover
        run: |
          curl -sSL https://rover.apollo.dev/nix/v0.10.0 | sh
          echo "$HOME/.rover/bin" >> $GITHUB_PATH

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: backend/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          cd backend
          poetry install --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Regenerate Schema
        id: schema-check
        run: |
          cd backend
          mv schema.graphql schema.graphql.old
          pnpm generate:schema
          python3 pipelines/compare-schema.py schema.graphql schema.graphql.old

      - name: Commit changes
        if: steps.schema-check.outputs.SUCCESS == '0'
        run: |
          cd backend
          APOLLO_KEY=${{ secrets.APOLLO_KEY }} rover graph publish ${{ secrets.APOLLO_REF }} --schema ./schema.graphql
